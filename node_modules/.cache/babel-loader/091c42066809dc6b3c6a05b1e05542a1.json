{"ast":null,"code":"var _jsxFileName = \"/Users/vihaanmanchanda/Desktop/DS fa20/Lawrence_Data_Science/WebApp/dsfkwebapp/src/components/pages/Experience1.js\";\nimport React from 'react';\nimport '../../App.css'; // import * as tm  from '@teachablemachine/image';\n// import * as predictionEl  from '@teachablemachine/image';\n// import * as  inferenceCamera from '@teachablemachine/image';\n//import * as tm from '@teachablemachine/image'\n\nexport default function Products() {\n  // const myWizard = new tm.Wizard({\n  //   // Define your classes\n  //     classes: [\n  //       {\n  //         name: \"Hand Up\",\n  //         title: \"Record Hand Up examples.\",\n  //         description:\n  //           \"Add examples of what you want to trigger your “Hand Up” state. This can be anything you want, like holding up your hand or an object.\"\n  //       },\n  //       {\n  //         name: \"Hand Down\",\n  //         title: \"Record “Hand Down” examples.\",\n  //         description:\n  //           \"Add examples of what you want to trigger your “Hand Down” state. For example, without your hand or object.\"\n  //       }\n  //     ],\n  //     onLoad: () => {\n  //       console.log(\"model has loaded\");\n  //     },\n  //     // Callback for when the \"inference camera\" is running\n  //     onPrediction: predictions => {\n  //       predictions.sort((a, b) => (a.probability > b.probability ? -1 : 1));\n  //       //predictionEl.innerHTML = predictions[0].className;\n  //     },\n  //     onSampleAdded: added => {\n  //       console.log(added);\n  //     },\n  //     onTrain: () => console.log(\"train begins\"),\n  //     onTrainComplete: () => {\n  //       console.log(\"train complete\");\n  //     }\n  //   });\n  //   document.body.appendChild(myWizard.buttonElement);\n  //   const myCamera = myWizard.createInferenceCamera();\n  //   document.body.appendChild(inferenceCamera); \n\n  /*#__PURE__*/\n  React.createElement(\"h1\", {\n    className: \"Experience1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \" Experience1 \");\n}","map":{"version":3,"sources":["/Users/vihaanmanchanda/Desktop/DS fa20/Lawrence_Data_Science/WebApp/dsfkwebapp/src/components/pages/Experience1.js"],"names":["React","Products"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGG;AAAA;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEF","sourcesContent":["import React from 'react';\nimport '../../App.css';\n// import * as tm  from '@teachablemachine/image';\n// import * as predictionEl  from '@teachablemachine/image';\n// import * as  inferenceCamera from '@teachablemachine/image';\n//import * as tm from '@teachablemachine/image'\n\nexport default function Products() {\n  \n// const myWizard = new tm.Wizard({\n//   // Define your classes\n//     classes: [\n//       {\n//         name: \"Hand Up\",\n//         title: \"Record Hand Up examples.\",\n//         description:\n//           \"Add examples of what you want to trigger your “Hand Up” state. This can be anything you want, like holding up your hand or an object.\"\n//       },\n//       {\n//         name: \"Hand Down\",\n//         title: \"Record “Hand Down” examples.\",\n//         description:\n//           \"Add examples of what you want to trigger your “Hand Down” state. For example, without your hand or object.\"\n//       }\n//     ],\n//     onLoad: () => {\n//       console.log(\"model has loaded\");\n//     },\n//     // Callback for when the \"inference camera\" is running\n//     onPrediction: predictions => {\n//       predictions.sort((a, b) => (a.probability > b.probability ? -1 : 1));\n//       //predictionEl.innerHTML = predictions[0].className;\n//     },\n//     onSampleAdded: added => {\n//       console.log(added);\n//     },\n//     onTrain: () => console.log(\"train begins\"),\n//     onTrainComplete: () => {\n//       console.log(\"train complete\");\n//     }\n//   });\n//   document.body.appendChild(myWizard.buttonElement);\n//   const myCamera = myWizard.createInferenceCamera();\n//   document.body.appendChild(inferenceCamera); \n\n\n   <h1 className='Experience1'> Experience1 </h1>;\n\n}\n"]},"metadata":{},"sourceType":"module"}