{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar newCanvas = function () {\n  return document.createElement('canvas');\n};\n\nfunction resize(image, scale, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n\n  canvas.width = image.width * scale;\n  canvas.height = image.height * scale;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nexports.resize = resize;\n\nfunction resizeMaxTo(image, maxSize, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n\n  var max = Math.max(image.width, image.height);\n  return resize(image, maxSize / max, canvas);\n}\n\nexports.resizeMaxTo = resizeMaxTo;\n\nfunction resizeMinTo(image, minSize, canvas) {\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  }\n\n  var min = Math.min(image.width, image.height);\n  return resize(image, minSize / min, canvas);\n}\n\nexports.resizeMinTo = resizeMinTo;\n\nfunction cropTo(image, size, flipped, canvas) {\n  if (flipped === void 0) {\n    flipped = false;\n  }\n\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  } // image image, bitmap, or canvas\n\n\n  var width = image.width;\n  var height = image.height; // if video element\n\n  if (image instanceof HTMLVideoElement) {\n    width = image.videoWidth;\n    height = image.videoHeight;\n  }\n\n  var min = Math.min(width, height);\n  var scale = size / min;\n  var scaledW = Math.ceil(width * scale);\n  var scaledH = Math.ceil(height * scale);\n  var dx = scaledW - size;\n  var dy = scaledH - size;\n  canvas.width = canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, ~~(dx / 2) * -1, ~~(dy / 2) * -1, scaledW, scaledH); // canvas is already sized and cropped to center correctly\n\n  if (flipped) {\n    ctx.scale(-1, 1);\n    ctx.drawImage(canvas, size * -1, 0);\n  }\n\n  return canvas;\n}\n\nexports.cropTo = cropTo;","map":{"version":3,"sources":["../../src/utils/canvas.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;AAeG;;;;;;AAIH,IAAM,SAAS,GAAG,YAAA;AAAM,SAAA,QAAQ,CAAC,aAAT,CAAA,QAAA,CAAA;AAAgC,CAAxD;;AAEA,SAAgB,MAAhB,CAAuB,KAAvB,EAAwC,KAAxC,EAAuD,MAAvD,EAA6F;AAAtC,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAA2B,SAAS,EAApC;AAAsC;;AACzF,EAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,KAAN,GAAc,KAA7B;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,KAAK,CAAC,MAAN,GAAe,KAA/B;AACA,MAAM,GAAG,GAA6B,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAtC;AAEA,EAAA,GAAG,CAAC,SAAJ,CAAc,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,MAAM,CAAC,KAAlC,EAAyC,MAAM,CAAC,MAAhD;AACA,SAAO,MAAP;AACH;;AAPD,OAAA,CAAA,MAAA,GAAA,MAAA;;AASA,SAAgB,WAAhB,CAA4B,KAA5B,EAA6C,OAA7C,EAA8D,MAA9D,EAAoG;AAAtC,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAA2B,SAAS,EAApC;AAAsC;;AAChG,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,KAAf,EAAsB,KAAK,CAAC,MAA5B,CAAZ;AACA,SAAO,MAAM,CAAC,KAAD,EAAQ,OAAO,GAAG,GAAlB,EAAuB,MAAvB,CAAb;AACH;;AAHD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAKA,SAAgB,WAAhB,CAA4B,KAA5B,EAA6C,OAA7C,EAA8D,MAA9D,EAAoG;AAAtC,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAA2B,SAAS,EAApC;AAAsC;;AAChG,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,KAAf,EAAsB,KAAK,CAAC,MAA5B,CAAZ;AACA,SAAO,MAAM,CAAC,KAAD,EAAQ,OAAO,GAAG,GAAlB,EAAuB,MAAvB,CAAb;AACH;;AAHD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAMA,SAAgB,MAAhB,CAAwB,KAAxB,EAAyC,IAAzC,EACI,OADJ,EACqB,MADrB,EAC4D;AAAxD,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,KAAA;AAAe;;AAAE,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAA4B,SAAS,EAArC;AAAuC,GAAA,CAExD;;;AACA,MAAI,KAAK,GAAG,KAAK,CAAC,KAAlB;AACA,MAAI,MAAM,GAAG,KAAK,CAAC,MAAnB,CAJwD,CAMxD;;AACA,MAAI,KAAK,YAAY,gBAArB,EAAuC;AACnC,IAAA,KAAK,GAAI,KAA0B,CAAC,UAApC;AACA,IAAA,MAAM,GAAI,KAA0B,CAAC,WAArC;AACH;;AAED,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,MAAhB,CAAZ;AACA,MAAM,KAAK,GAAG,IAAI,GAAG,GAArB;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,KAAlB,CAAhB;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,MAAM,GAAG,KAAnB,CAAhB;AACA,MAAM,EAAE,GAAG,OAAO,GAAG,IAArB;AACA,MAAM,EAAE,GAAG,OAAO,GAAG,IAArB;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,MAAP,GAAgB,IAA/B;AACA,MAAM,GAAG,GAA6B,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAtC;AACA,EAAA,GAAG,CAAC,SAAJ,CAAc,KAAd,EAAqB,CAAC,EAAE,EAAE,GAAG,CAAP,CAAD,GAAa,CAAC,CAAnC,EAAsC,CAAC,EAAE,EAAE,GAAG,CAAP,CAAD,GAAa,CAAC,CAApD,EAAuD,OAAvD,EAAgE,OAAhE,EApBwD,CAsBxD;;AACA,MAAI,OAAJ,EAAa;AACT,IAAA,GAAG,CAAC,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;AACA,IAAA,GAAG,CAAC,SAAJ,CAAc,MAAd,EAAsB,IAAI,GAAG,CAAC,CAA9B,EAAiC,CAAjC;AACH;;AAED,SAAO,MAAP;AACH;;AA9BD,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar newCanvas = function () { return document.createElement('canvas'); };\nfunction resize(image, scale, canvas) {\n    if (canvas === void 0) { canvas = newCanvas(); }\n    canvas.width = image.width * scale;\n    canvas.height = image.height * scale;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexports.resize = resize;\nfunction resizeMaxTo(image, maxSize, canvas) {\n    if (canvas === void 0) { canvas = newCanvas(); }\n    var max = Math.max(image.width, image.height);\n    return resize(image, maxSize / max, canvas);\n}\nexports.resizeMaxTo = resizeMaxTo;\nfunction resizeMinTo(image, minSize, canvas) {\n    if (canvas === void 0) { canvas = newCanvas(); }\n    var min = Math.min(image.width, image.height);\n    return resize(image, minSize / min, canvas);\n}\nexports.resizeMinTo = resizeMinTo;\nfunction cropTo(image, size, flipped, canvas) {\n    if (flipped === void 0) { flipped = false; }\n    if (canvas === void 0) { canvas = newCanvas(); }\n    // image image, bitmap, or canvas\n    var width = image.width;\n    var height = image.height;\n    // if video element\n    if (image instanceof HTMLVideoElement) {\n        width = image.videoWidth;\n        height = image.videoHeight;\n    }\n    var min = Math.min(width, height);\n    var scale = size / min;\n    var scaledW = Math.ceil(width * scale);\n    var scaledH = Math.ceil(height * scale);\n    var dx = scaledW - size;\n    var dy = scaledH - size;\n    canvas.width = canvas.height = size;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(image, ~~(dx / 2) * -1, ~~(dy / 2) * -1, scaledW, scaledH);\n    // canvas is already sized and cropped to center correctly\n    if (flipped) {\n        ctx.scale(-1, 1);\n        ctx.drawImage(canvas, size * -1, 0);\n    }\n    return canvas;\n}\nexports.cropTo = cropTo;\n//# sourceMappingURL=canvas.js.map"]},"metadata":{},"sourceType":"script"}