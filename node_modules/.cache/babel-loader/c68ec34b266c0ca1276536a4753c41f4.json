{"ast":null,"code":"var _jsxFileName = \"/Users/vihaanmanchanda/Desktop/DS fa20/Lawrence_Data_Science/WebApp/dsfkwebapp/src/components/pages/Experience1.js\";\nimport React from 'react';\nimport '../../App.css';\nimport * as tm from '@teachablemachine/image';\nimport * as predictionEl from '@teachablemachine/image';\nexport default function Products() {\n  const myWizard = new tm.Wizard({\n    // Define your classes\n    classes: [{\n      name: \"Hand Up\",\n      title: \"Record Hand Up examples.\",\n      description: \"Add examples of what you want to trigger your “Hand Up” state. This can be anything you want, like holding up your hand or an object.\"\n    }, {\n      name: \"Hand Down\",\n      title: \"Record “Hand Down” examples.\",\n      description: \"Add examples of what you want to trigger your “Hand Down” state. For example, without your hand or object.\"\n    }],\n    onLoad: () => {\n      console.log(\"model has loaded\");\n    },\n    // Callback for when the \"inference camera\" is running\n    onPrediction: predictions => {\n      predictions.sort((a, b) => a.probability > b.probability ? -1 : 1);\n      predictionEl.innerHTML = predictions[0].className;\n    },\n    onSampleAdded: added => {\n      console.log(added);\n    },\n    onTrain: () => console.log(\"train begins\"),\n    onTrainComplete: () => {\n      console.log(\"train complete\");\n    }\n  });\n  document.body.appendChild(myWizard.buttonElement);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Experience1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, \" Experience1 \");\n}","map":{"version":3,"sources":["/Users/vihaanmanchanda/Desktop/DS fa20/Lawrence_Data_Science/WebApp/dsfkwebapp/src/components/pages/Experience1.js"],"names":["React","tm","predictionEl","Products","myWizard","Wizard","classes","name","title","description","onLoad","console","log","onPrediction","predictions","sort","a","b","probability","innerHTML","className","onSampleAdded","added","onTrain","onTrainComplete","document","body","appendChild","buttonElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,EAAZ,MAAqB,yBAArB;AACA,OAAO,KAAKC,YAAZ,MAA+B,yBAA/B;AACA,eAAe,SAASC,QAAT,GAAoB;AAEnC,QAAMC,QAAQ,GAAG,IAAIH,EAAE,CAACI,MAAP,CAAc;AAC7B;AACEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,0BAFT;AAGEC,MAAAA,WAAW,EACT;AAJJ,KADO,EAOP;AACEF,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,KAAK,EAAE,8BAFT;AAGEC,MAAAA,WAAW,EACT;AAJJ,KAPO,CAFkB;AAgB3BC,IAAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAlB0B;AAmB3B;AACAC,IAAAA,YAAY,EAAEC,WAAW,IAAI;AAC3BA,MAAAA,WAAW,CAACC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAlB,GAAgC,CAAC,CAAjC,GAAqC,CAAjE;AACAhB,MAAAA,YAAY,CAACiB,SAAb,GAAyBL,WAAW,CAAC,CAAD,CAAX,CAAeM,SAAxC;AACD,KAvB0B;AAwB3BC,IAAAA,aAAa,EAAEC,KAAK,IAAI;AACtBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KA1B0B;AA2B3BC,IAAAA,OAAO,EAAE,MAAMZ,OAAO,CAACC,GAAR,CAAY,cAAZ,CA3BY;AA4B3BY,IAAAA,eAAe,EAAE,MAAM;AACrBb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AA9B0B,GAAd,CAAjB;AAgCEa,EAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BvB,QAAQ,CAACwB,aAAnC;AACA,sBAAO;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAED","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport * as tm  from '@teachablemachine/image';\nimport * as predictionEl  from '@teachablemachine/image';\nexport default function Products() {\n  \nconst myWizard = new tm.Wizard({\n  // Define your classes\n    classes: [\n      {\n        name: \"Hand Up\",\n        title: \"Record Hand Up examples.\",\n        description:\n          \"Add examples of what you want to trigger your “Hand Up” state. This can be anything you want, like holding up your hand or an object.\"\n      },\n      {\n        name: \"Hand Down\",\n        title: \"Record “Hand Down” examples.\",\n        description:\n          \"Add examples of what you want to trigger your “Hand Down” state. For example, without your hand or object.\"\n      }\n    ],\n    onLoad: () => {\n      console.log(\"model has loaded\");\n    },\n    // Callback for when the \"inference camera\" is running\n    onPrediction: predictions => {\n      predictions.sort((a, b) => (a.probability > b.probability ? -1 : 1));\n      predictionEl.innerHTML = predictions[0].className;\n    },\n    onSampleAdded: added => {\n      console.log(added);\n    },\n    onTrain: () => console.log(\"train begins\"),\n    onTrainComplete: () => {\n      console.log(\"train complete\");\n    }\n  });\n  document.body.appendChild(myWizard.buttonElement);\n  return <h1 className='Experience1'> Experience1 </h1>;\n\n}\n"]},"metadata":{},"sourceType":"module"}